/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rknowsys.eapp.hrm.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rknowsys.eapp.hrm.model.Holiday;
import com.rknowsys.eapp.hrm.model.HolidayModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Holiday service. Represents a row in the &quot;holiday&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rknowsys.eapp.hrm.model.HolidayModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link HolidayImpl}.
 * </p>
 *
 * @author rknowsys
 * @see HolidayImpl
 * @see com.rknowsys.eapp.hrm.model.Holiday
 * @see com.rknowsys.eapp.hrm.model.HolidayModel
 * @generated
 */
public class HolidayModelImpl extends BaseModelImpl<Holiday>
	implements HolidayModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a Holiday model instance should use the {@link com.rknowsys.eapp.hrm.model.Holiday} interface instead.
	 */
	public static final String TABLE_NAME = "holiday";
	public static final Object[][] TABLE_COLUMNS = {
			{ "holidayId", Types.BIGINT },
			{ "holidayName", Types.VARCHAR },
			{ "isAnnual", Types.BOOLEAN },
			{ "isFullDay", Types.BOOLEAN },
			{ "holidayDate", Types.TIMESTAMP },
			{ "nationalityId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table holiday (holidayId LONG not null primary key,holidayName VARCHAR(75) null,isAnnual BOOLEAN,isFullDay BOOLEAN,holidayDate DATE null,nationalityId LONG,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table holiday";
	public static final String ORDER_BY_JPQL = " ORDER BY holiday.holidayId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY holiday.holidayId ASC";
	public static final String DATA_SOURCE = "hrmDataSource";
	public static final String SESSION_FACTORY = "hrmSessionFactory";
	public static final String TX_MANAGER = "hrmTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rknowsys.eapp.hrm.model.Holiday"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rknowsys.eapp.hrm.model.Holiday"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final String MAPPING_TABLE_HRM_LOCATIONS_HOLIDAYS_NAME = "hrm_locations_holidays";
	public static final Object[][] MAPPING_TABLE_HRM_LOCATIONS_HOLIDAYS_COLUMNS = {
			{ "holidayId", Types.BIGINT },
			{ "locationId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_HRM_LOCATIONS_HOLIDAYS_SQL_CREATE = "create table hrm_locations_holidays (holidayId LONG not null,locationId LONG not null,primary key (holidayId, locationId))";
	public static final boolean FINDER_CACHE_ENABLED_HRM_LOCATIONS_HOLIDAYS = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.hrm_locations_holidays"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rknowsys.eapp.hrm.model.Holiday"));

	public HolidayModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _holidayId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setHolidayId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _holidayId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Holiday.class;
	}

	@Override
	public String getModelClassName() {
		return Holiday.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("holidayId", getHolidayId());
		attributes.put("holidayName", getHolidayName());
		attributes.put("isAnnual", getIsAnnual());
		attributes.put("isFullDay", getIsFullDay());
		attributes.put("holidayDate", getHolidayDate());
		attributes.put("nationalityId", getNationalityId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long holidayId = (Long)attributes.get("holidayId");

		if (holidayId != null) {
			setHolidayId(holidayId);
		}

		String holidayName = (String)attributes.get("holidayName");

		if (holidayName != null) {
			setHolidayName(holidayName);
		}

		Boolean isAnnual = (Boolean)attributes.get("isAnnual");

		if (isAnnual != null) {
			setIsAnnual(isAnnual);
		}

		Boolean isFullDay = (Boolean)attributes.get("isFullDay");

		if (isFullDay != null) {
			setIsFullDay(isFullDay);
		}

		Date holidayDate = (Date)attributes.get("holidayDate");

		if (holidayDate != null) {
			setHolidayDate(holidayDate);
		}

		Long nationalityId = (Long)attributes.get("nationalityId");

		if (nationalityId != null) {
			setNationalityId(nationalityId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getHolidayId() {
		return _holidayId;
	}

	@Override
	public void setHolidayId(long holidayId) {
		_holidayId = holidayId;
	}

	@Override
	public String getHolidayName() {
		if (_holidayName == null) {
			return StringPool.BLANK;
		}
		else {
			return _holidayName;
		}
	}

	@Override
	public void setHolidayName(String holidayName) {
		_holidayName = holidayName;
	}

	@Override
	public boolean getIsAnnual() {
		return _isAnnual;
	}

	@Override
	public boolean isIsAnnual() {
		return _isAnnual;
	}

	@Override
	public void setIsAnnual(boolean isAnnual) {
		_isAnnual = isAnnual;
	}

	@Override
	public boolean getIsFullDay() {
		return _isFullDay;
	}

	@Override
	public boolean isIsFullDay() {
		return _isFullDay;
	}

	@Override
	public void setIsFullDay(boolean isFullDay) {
		_isFullDay = isFullDay;
	}

	@Override
	public Date getHolidayDate() {
		return _holidayDate;
	}

	@Override
	public void setHolidayDate(Date holidayDate) {
		_holidayDate = holidayDate;
	}

	@Override
	public long getNationalityId() {
		return _nationalityId;
	}

	@Override
	public void setNationalityId(long nationalityId) {
		_nationalityId = nationalityId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Holiday.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Holiday toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Holiday)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		HolidayImpl holidayImpl = new HolidayImpl();

		holidayImpl.setHolidayId(getHolidayId());
		holidayImpl.setHolidayName(getHolidayName());
		holidayImpl.setIsAnnual(getIsAnnual());
		holidayImpl.setIsFullDay(getIsFullDay());
		holidayImpl.setHolidayDate(getHolidayDate());
		holidayImpl.setNationalityId(getNationalityId());
		holidayImpl.setGroupId(getGroupId());
		holidayImpl.setCompanyId(getCompanyId());
		holidayImpl.setUserId(getUserId());
		holidayImpl.setUserName(getUserName());
		holidayImpl.setCreateDate(getCreateDate());
		holidayImpl.setModifiedDate(getModifiedDate());

		holidayImpl.resetOriginalValues();

		return holidayImpl;
	}

	@Override
	public int compareTo(Holiday holiday) {
		long primaryKey = holiday.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Holiday)) {
			return false;
		}

		Holiday holiday = (Holiday)obj;

		long primaryKey = holiday.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Holiday> toCacheModel() {
		HolidayCacheModel holidayCacheModel = new HolidayCacheModel();

		holidayCacheModel.holidayId = getHolidayId();

		holidayCacheModel.holidayName = getHolidayName();

		String holidayName = holidayCacheModel.holidayName;

		if ((holidayName != null) && (holidayName.length() == 0)) {
			holidayCacheModel.holidayName = null;
		}

		holidayCacheModel.isAnnual = getIsAnnual();

		holidayCacheModel.isFullDay = getIsFullDay();

		Date holidayDate = getHolidayDate();

		if (holidayDate != null) {
			holidayCacheModel.holidayDate = holidayDate.getTime();
		}
		else {
			holidayCacheModel.holidayDate = Long.MIN_VALUE;
		}

		holidayCacheModel.nationalityId = getNationalityId();

		holidayCacheModel.groupId = getGroupId();

		holidayCacheModel.companyId = getCompanyId();

		holidayCacheModel.userId = getUserId();

		holidayCacheModel.userName = getUserName();

		String userName = holidayCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			holidayCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			holidayCacheModel.createDate = createDate.getTime();
		}
		else {
			holidayCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			holidayCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			holidayCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return holidayCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{holidayId=");
		sb.append(getHolidayId());
		sb.append(", holidayName=");
		sb.append(getHolidayName());
		sb.append(", isAnnual=");
		sb.append(getIsAnnual());
		sb.append(", isFullDay=");
		sb.append(getIsFullDay());
		sb.append(", holidayDate=");
		sb.append(getHolidayDate());
		sb.append(", nationalityId=");
		sb.append(getNationalityId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.rknowsys.eapp.hrm.model.Holiday");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>holidayId</column-name><column-value><![CDATA[");
		sb.append(getHolidayId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>holidayName</column-name><column-value><![CDATA[");
		sb.append(getHolidayName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isAnnual</column-name><column-value><![CDATA[");
		sb.append(getIsAnnual());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isFullDay</column-name><column-value><![CDATA[");
		sb.append(getIsFullDay());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>holidayDate</column-name><column-value><![CDATA[");
		sb.append(getHolidayDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nationalityId</column-name><column-value><![CDATA[");
		sb.append(getNationalityId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Holiday.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Holiday.class
		};
	private long _holidayId;
	private String _holidayName;
	private boolean _isAnnual;
	private boolean _isFullDay;
	private Date _holidayDate;
	private long _nationalityId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private Holiday _escapedModel;
}