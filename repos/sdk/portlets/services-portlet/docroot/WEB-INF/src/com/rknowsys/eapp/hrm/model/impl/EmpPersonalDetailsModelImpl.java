/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rknowsys.eapp.hrm.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rknowsys.eapp.hrm.model.EmpPersonalDetails;
import com.rknowsys.eapp.hrm.model.EmpPersonalDetailsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the EmpPersonalDetails service. Represents a row in the &quot;emp_personal_details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rknowsys.eapp.hrm.model.EmpPersonalDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmpPersonalDetailsImpl}.
 * </p>
 *
 * @author rknowsys
 * @see EmpPersonalDetailsImpl
 * @see com.rknowsys.eapp.hrm.model.EmpPersonalDetails
 * @see com.rknowsys.eapp.hrm.model.EmpPersonalDetailsModel
 * @generated
 */
public class EmpPersonalDetailsModelImpl extends BaseModelImpl<EmpPersonalDetails>
	implements EmpPersonalDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a EmpPersonalDetails model instance should use the {@link com.rknowsys.eapp.hrm.model.EmpPersonalDetails} interface instead.
	 */
	public static final String TABLE_NAME = "emp_personal_details";
	public static final Object[][] TABLE_COLUMNS = {
			{ "empPersonalDetailsId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "firstName", Types.VARCHAR },
			{ "lastName", Types.VARCHAR },
			{ "middleName", Types.VARCHAR },
			{ "employeeNo", Types.VARCHAR },
			{ "otherId", Types.VARCHAR },
			{ "licenseNo", Types.VARCHAR },
			{ "licenseExpDate", Types.TIMESTAMP },
			{ "gender", Types.VARCHAR },
			{ "maritalStatus", Types.VARCHAR },
			{ "nationalityId", Types.BIGINT },
			{ "dateOfBirth", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table emp_personal_details (empPersonalDetailsId LONG not null primary key,employeeId LONG,groupId LONG,companyId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,firstName VARCHAR(75) null,lastName VARCHAR(75) null,middleName VARCHAR(75) null,employeeNo VARCHAR(75) null,otherId VARCHAR(75) null,licenseNo VARCHAR(75) null,licenseExpDate DATE null,gender VARCHAR(75) null,maritalStatus VARCHAR(75) null,nationalityId LONG,dateOfBirth DATE null)";
	public static final String TABLE_SQL_DROP = "drop table emp_personal_details";
	public static final String ORDER_BY_JPQL = " ORDER BY empPersonalDetails.empPersonalDetailsId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY emp_personal_details.empPersonalDetailsId ASC";
	public static final String DATA_SOURCE = "hrmDataSource";
	public static final String SESSION_FACTORY = "hrmSessionFactory";
	public static final String TX_MANAGER = "hrmTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rknowsys.eapp.hrm.model.EmpPersonalDetails"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rknowsys.eapp.hrm.model.EmpPersonalDetails"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.rknowsys.eapp.hrm.model.EmpPersonalDetails"),
			true);
	public static long EMPLOYEEID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long EMPPERSONALDETAILSID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rknowsys.eapp.hrm.model.EmpPersonalDetails"));

	public EmpPersonalDetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _empPersonalDetailsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmpPersonalDetailsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _empPersonalDetailsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmpPersonalDetails.class;
	}

	@Override
	public String getModelClassName() {
		return EmpPersonalDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("empPersonalDetailsId", getEmpPersonalDetailsId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("firstName", getFirstName());
		attributes.put("lastName", getLastName());
		attributes.put("middleName", getMiddleName());
		attributes.put("employeeNo", getEmployeeNo());
		attributes.put("otherId", getOtherId());
		attributes.put("licenseNo", getLicenseNo());
		attributes.put("licenseExpDate", getLicenseExpDate());
		attributes.put("gender", getGender());
		attributes.put("maritalStatus", getMaritalStatus());
		attributes.put("nationalityId", getNationalityId());
		attributes.put("dateOfBirth", getDateOfBirth());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long empPersonalDetailsId = (Long)attributes.get("empPersonalDetailsId");

		if (empPersonalDetailsId != null) {
			setEmpPersonalDetailsId(empPersonalDetailsId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String firstName = (String)attributes.get("firstName");

		if (firstName != null) {
			setFirstName(firstName);
		}

		String lastName = (String)attributes.get("lastName");

		if (lastName != null) {
			setLastName(lastName);
		}

		String middleName = (String)attributes.get("middleName");

		if (middleName != null) {
			setMiddleName(middleName);
		}

		String employeeNo = (String)attributes.get("employeeNo");

		if (employeeNo != null) {
			setEmployeeNo(employeeNo);
		}

		String otherId = (String)attributes.get("otherId");

		if (otherId != null) {
			setOtherId(otherId);
		}

		String licenseNo = (String)attributes.get("licenseNo");

		if (licenseNo != null) {
			setLicenseNo(licenseNo);
		}

		Date licenseExpDate = (Date)attributes.get("licenseExpDate");

		if (licenseExpDate != null) {
			setLicenseExpDate(licenseExpDate);
		}

		String gender = (String)attributes.get("gender");

		if (gender != null) {
			setGender(gender);
		}

		String maritalStatus = (String)attributes.get("maritalStatus");

		if (maritalStatus != null) {
			setMaritalStatus(maritalStatus);
		}

		Long nationalityId = (Long)attributes.get("nationalityId");

		if (nationalityId != null) {
			setNationalityId(nationalityId);
		}

		Date dateOfBirth = (Date)attributes.get("dateOfBirth");

		if (dateOfBirth != null) {
			setDateOfBirth(dateOfBirth);
		}
	}

	@Override
	public long getEmpPersonalDetailsId() {
		return _empPersonalDetailsId;
	}

	@Override
	public void setEmpPersonalDetailsId(long empPersonalDetailsId) {
		_empPersonalDetailsId = empPersonalDetailsId;
	}

	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_columnBitmask |= EMPLOYEEID_COLUMN_BITMASK;

		if (!_setOriginalEmployeeId) {
			_setOriginalEmployeeId = true;

			_originalEmployeeId = _employeeId;
		}

		_employeeId = employeeId;
	}

	public long getOriginalEmployeeId() {
		return _originalEmployeeId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		_firstName = firstName;
	}

	@Override
	public String getLastName() {
		if (_lastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		_lastName = lastName;
	}

	@Override
	public String getMiddleName() {
		if (_middleName == null) {
			return StringPool.BLANK;
		}
		else {
			return _middleName;
		}
	}

	@Override
	public void setMiddleName(String middleName) {
		_middleName = middleName;
	}

	@Override
	public String getEmployeeNo() {
		if (_employeeNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _employeeNo;
		}
	}

	@Override
	public void setEmployeeNo(String employeeNo) {
		_employeeNo = employeeNo;
	}

	@Override
	public String getOtherId() {
		if (_otherId == null) {
			return StringPool.BLANK;
		}
		else {
			return _otherId;
		}
	}

	@Override
	public void setOtherId(String otherId) {
		_otherId = otherId;
	}

	@Override
	public String getLicenseNo() {
		if (_licenseNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _licenseNo;
		}
	}

	@Override
	public void setLicenseNo(String licenseNo) {
		_licenseNo = licenseNo;
	}

	@Override
	public Date getLicenseExpDate() {
		return _licenseExpDate;
	}

	@Override
	public void setLicenseExpDate(Date licenseExpDate) {
		_licenseExpDate = licenseExpDate;
	}

	@Override
	public String getGender() {
		if (_gender == null) {
			return StringPool.BLANK;
		}
		else {
			return _gender;
		}
	}

	@Override
	public void setGender(String gender) {
		_gender = gender;
	}

	@Override
	public String getMaritalStatus() {
		if (_maritalStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _maritalStatus;
		}
	}

	@Override
	public void setMaritalStatus(String maritalStatus) {
		_maritalStatus = maritalStatus;
	}

	@Override
	public long getNationalityId() {
		return _nationalityId;
	}

	@Override
	public void setNationalityId(long nationalityId) {
		_nationalityId = nationalityId;
	}

	@Override
	public Date getDateOfBirth() {
		return _dateOfBirth;
	}

	@Override
	public void setDateOfBirth(Date dateOfBirth) {
		_dateOfBirth = dateOfBirth;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EmpPersonalDetails.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmpPersonalDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EmpPersonalDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmpPersonalDetailsImpl empPersonalDetailsImpl = new EmpPersonalDetailsImpl();

		empPersonalDetailsImpl.setEmpPersonalDetailsId(getEmpPersonalDetailsId());
		empPersonalDetailsImpl.setEmployeeId(getEmployeeId());
		empPersonalDetailsImpl.setGroupId(getGroupId());
		empPersonalDetailsImpl.setCompanyId(getCompanyId());
		empPersonalDetailsImpl.setUserId(getUserId());
		empPersonalDetailsImpl.setCreateDate(getCreateDate());
		empPersonalDetailsImpl.setModifiedDate(getModifiedDate());
		empPersonalDetailsImpl.setFirstName(getFirstName());
		empPersonalDetailsImpl.setLastName(getLastName());
		empPersonalDetailsImpl.setMiddleName(getMiddleName());
		empPersonalDetailsImpl.setEmployeeNo(getEmployeeNo());
		empPersonalDetailsImpl.setOtherId(getOtherId());
		empPersonalDetailsImpl.setLicenseNo(getLicenseNo());
		empPersonalDetailsImpl.setLicenseExpDate(getLicenseExpDate());
		empPersonalDetailsImpl.setGender(getGender());
		empPersonalDetailsImpl.setMaritalStatus(getMaritalStatus());
		empPersonalDetailsImpl.setNationalityId(getNationalityId());
		empPersonalDetailsImpl.setDateOfBirth(getDateOfBirth());

		empPersonalDetailsImpl.resetOriginalValues();

		return empPersonalDetailsImpl;
	}

	@Override
	public int compareTo(EmpPersonalDetails empPersonalDetails) {
		long primaryKey = empPersonalDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmpPersonalDetails)) {
			return false;
		}

		EmpPersonalDetails empPersonalDetails = (EmpPersonalDetails)obj;

		long primaryKey = empPersonalDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EmpPersonalDetailsModelImpl empPersonalDetailsModelImpl = this;

		empPersonalDetailsModelImpl._originalEmployeeId = empPersonalDetailsModelImpl._employeeId;

		empPersonalDetailsModelImpl._setOriginalEmployeeId = false;

		empPersonalDetailsModelImpl._originalGroupId = empPersonalDetailsModelImpl._groupId;

		empPersonalDetailsModelImpl._setOriginalGroupId = false;

		empPersonalDetailsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EmpPersonalDetails> toCacheModel() {
		EmpPersonalDetailsCacheModel empPersonalDetailsCacheModel = new EmpPersonalDetailsCacheModel();

		empPersonalDetailsCacheModel.empPersonalDetailsId = getEmpPersonalDetailsId();

		empPersonalDetailsCacheModel.employeeId = getEmployeeId();

		empPersonalDetailsCacheModel.groupId = getGroupId();

		empPersonalDetailsCacheModel.companyId = getCompanyId();

		empPersonalDetailsCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			empPersonalDetailsCacheModel.createDate = createDate.getTime();
		}
		else {
			empPersonalDetailsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			empPersonalDetailsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			empPersonalDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		empPersonalDetailsCacheModel.firstName = getFirstName();

		String firstName = empPersonalDetailsCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			empPersonalDetailsCacheModel.firstName = null;
		}

		empPersonalDetailsCacheModel.lastName = getLastName();

		String lastName = empPersonalDetailsCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			empPersonalDetailsCacheModel.lastName = null;
		}

		empPersonalDetailsCacheModel.middleName = getMiddleName();

		String middleName = empPersonalDetailsCacheModel.middleName;

		if ((middleName != null) && (middleName.length() == 0)) {
			empPersonalDetailsCacheModel.middleName = null;
		}

		empPersonalDetailsCacheModel.employeeNo = getEmployeeNo();

		String employeeNo = empPersonalDetailsCacheModel.employeeNo;

		if ((employeeNo != null) && (employeeNo.length() == 0)) {
			empPersonalDetailsCacheModel.employeeNo = null;
		}

		empPersonalDetailsCacheModel.otherId = getOtherId();

		String otherId = empPersonalDetailsCacheModel.otherId;

		if ((otherId != null) && (otherId.length() == 0)) {
			empPersonalDetailsCacheModel.otherId = null;
		}

		empPersonalDetailsCacheModel.licenseNo = getLicenseNo();

		String licenseNo = empPersonalDetailsCacheModel.licenseNo;

		if ((licenseNo != null) && (licenseNo.length() == 0)) {
			empPersonalDetailsCacheModel.licenseNo = null;
		}

		Date licenseExpDate = getLicenseExpDate();

		if (licenseExpDate != null) {
			empPersonalDetailsCacheModel.licenseExpDate = licenseExpDate.getTime();
		}
		else {
			empPersonalDetailsCacheModel.licenseExpDate = Long.MIN_VALUE;
		}

		empPersonalDetailsCacheModel.gender = getGender();

		String gender = empPersonalDetailsCacheModel.gender;

		if ((gender != null) && (gender.length() == 0)) {
			empPersonalDetailsCacheModel.gender = null;
		}

		empPersonalDetailsCacheModel.maritalStatus = getMaritalStatus();

		String maritalStatus = empPersonalDetailsCacheModel.maritalStatus;

		if ((maritalStatus != null) && (maritalStatus.length() == 0)) {
			empPersonalDetailsCacheModel.maritalStatus = null;
		}

		empPersonalDetailsCacheModel.nationalityId = getNationalityId();

		Date dateOfBirth = getDateOfBirth();

		if (dateOfBirth != null) {
			empPersonalDetailsCacheModel.dateOfBirth = dateOfBirth.getTime();
		}
		else {
			empPersonalDetailsCacheModel.dateOfBirth = Long.MIN_VALUE;
		}

		return empPersonalDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(37);

		sb.append("{empPersonalDetailsId=");
		sb.append(getEmpPersonalDetailsId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", firstName=");
		sb.append(getFirstName());
		sb.append(", lastName=");
		sb.append(getLastName());
		sb.append(", middleName=");
		sb.append(getMiddleName());
		sb.append(", employeeNo=");
		sb.append(getEmployeeNo());
		sb.append(", otherId=");
		sb.append(getOtherId());
		sb.append(", licenseNo=");
		sb.append(getLicenseNo());
		sb.append(", licenseExpDate=");
		sb.append(getLicenseExpDate());
		sb.append(", gender=");
		sb.append(getGender());
		sb.append(", maritalStatus=");
		sb.append(getMaritalStatus());
		sb.append(", nationalityId=");
		sb.append(getNationalityId());
		sb.append(", dateOfBirth=");
		sb.append(getDateOfBirth());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(58);

		sb.append("<model><model-name>");
		sb.append("com.rknowsys.eapp.hrm.model.EmpPersonalDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>empPersonalDetailsId</column-name><column-value><![CDATA[");
		sb.append(getEmpPersonalDetailsId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>middleName</column-name><column-value><![CDATA[");
		sb.append(getMiddleName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeNo</column-name><column-value><![CDATA[");
		sb.append(getEmployeeNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>otherId</column-name><column-value><![CDATA[");
		sb.append(getOtherId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>licenseNo</column-name><column-value><![CDATA[");
		sb.append(getLicenseNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>licenseExpDate</column-name><column-value><![CDATA[");
		sb.append(getLicenseExpDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gender</column-name><column-value><![CDATA[");
		sb.append(getGender());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maritalStatus</column-name><column-value><![CDATA[");
		sb.append(getMaritalStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nationalityId</column-name><column-value><![CDATA[");
		sb.append(getNationalityId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateOfBirth</column-name><column-value><![CDATA[");
		sb.append(getDateOfBirth());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EmpPersonalDetails.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EmpPersonalDetails.class
		};
	private long _empPersonalDetailsId;
	private long _employeeId;
	private long _originalEmployeeId;
	private boolean _setOriginalEmployeeId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private String _firstName;
	private String _lastName;
	private String _middleName;
	private String _employeeNo;
	private String _otherId;
	private String _licenseNo;
	private Date _licenseExpDate;
	private String _gender;
	private String _maritalStatus;
	private long _nationalityId;
	private Date _dateOfBirth;
	private long _columnBitmask;
	private EmpPersonalDetails _escapedModel;
}