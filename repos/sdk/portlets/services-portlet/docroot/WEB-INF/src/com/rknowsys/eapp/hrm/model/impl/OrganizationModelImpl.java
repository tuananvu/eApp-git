/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rknowsys.eapp.hrm.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rknowsys.eapp.hrm.model.Organization;
import com.rknowsys.eapp.hrm.model.OrganizationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Organization service. Represents a row in the &quot;hrm_organization&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rknowsys.eapp.hrm.model.OrganizationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OrganizationImpl}.
 * </p>
 *
 * @author rknowsys
 * @see OrganizationImpl
 * @see com.rknowsys.eapp.hrm.model.Organization
 * @see com.rknowsys.eapp.hrm.model.OrganizationModel
 * @generated
 */
public class OrganizationModelImpl extends BaseModelImpl<Organization>
	implements OrganizationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a Organization model instance should use the {@link com.rknowsys.eapp.hrm.model.Organization} interface instead.
	 */
	public static final String TABLE_NAME = "hrm_organization";
	public static final Object[][] TABLE_COLUMNS = {
			{ "organizationId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "organizationName", Types.VARCHAR },
			{ "taxId", Types.VARCHAR },
			{ "numberOfEmployees", Types.BIGINT },
			{ "registrationNumber", Types.VARCHAR },
			{ "phone", Types.VARCHAR },
			{ "fax", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "addressStreet1", Types.VARCHAR },
			{ "addressStreet2", Types.VARCHAR },
			{ "city", Types.VARCHAR },
			{ "state_", Types.VARCHAR },
			{ "postalCode", Types.VARCHAR },
			{ "nationalityId", Types.BIGINT },
			{ "note", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table hrm_organization (organizationId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,organizationName VARCHAR(75) null,taxId VARCHAR(75) null,numberOfEmployees LONG,registrationNumber VARCHAR(75) null,phone VARCHAR(75) null,fax VARCHAR(75) null,email VARCHAR(75) null,addressStreet1 VARCHAR(75) null,addressStreet2 VARCHAR(75) null,city VARCHAR(75) null,state_ VARCHAR(75) null,postalCode VARCHAR(75) null,nationalityId LONG,note VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table hrm_organization";
	public static final String ORDER_BY_JPQL = " ORDER BY organization.organizationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY hrm_organization.organizationId ASC";
	public static final String DATA_SOURCE = "hrmDataSource";
	public static final String SESSION_FACTORY = "hrmSessionFactory";
	public static final String TX_MANAGER = "hrmTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rknowsys.eapp.hrm.model.Organization"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rknowsys.eapp.hrm.model.Organization"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rknowsys.eapp.hrm.model.Organization"));

	public OrganizationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _organizationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setOrganizationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _organizationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Organization.class;
	}

	@Override
	public String getModelClassName() {
		return Organization.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("organizationId", getOrganizationId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("organizationName", getOrganizationName());
		attributes.put("taxId", getTaxId());
		attributes.put("numberOfEmployees", getNumberOfEmployees());
		attributes.put("registrationNumber", getRegistrationNumber());
		attributes.put("phone", getPhone());
		attributes.put("fax", getFax());
		attributes.put("email", getEmail());
		attributes.put("addressStreet1", getAddressStreet1());
		attributes.put("addressStreet2", getAddressStreet2());
		attributes.put("city", getCity());
		attributes.put("state", getState());
		attributes.put("postalCode", getPostalCode());
		attributes.put("nationalityId", getNationalityId());
		attributes.put("note", getNote());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String organizationName = (String)attributes.get("organizationName");

		if (organizationName != null) {
			setOrganizationName(organizationName);
		}

		String taxId = (String)attributes.get("taxId");

		if (taxId != null) {
			setTaxId(taxId);
		}

		Long numberOfEmployees = (Long)attributes.get("numberOfEmployees");

		if (numberOfEmployees != null) {
			setNumberOfEmployees(numberOfEmployees);
		}

		String registrationNumber = (String)attributes.get("registrationNumber");

		if (registrationNumber != null) {
			setRegistrationNumber(registrationNumber);
		}

		String phone = (String)attributes.get("phone");

		if (phone != null) {
			setPhone(phone);
		}

		String fax = (String)attributes.get("fax");

		if (fax != null) {
			setFax(fax);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String addressStreet1 = (String)attributes.get("addressStreet1");

		if (addressStreet1 != null) {
			setAddressStreet1(addressStreet1);
		}

		String addressStreet2 = (String)attributes.get("addressStreet2");

		if (addressStreet2 != null) {
			setAddressStreet2(addressStreet2);
		}

		String city = (String)attributes.get("city");

		if (city != null) {
			setCity(city);
		}

		String state = (String)attributes.get("state");

		if (state != null) {
			setState(state);
		}

		String postalCode = (String)attributes.get("postalCode");

		if (postalCode != null) {
			setPostalCode(postalCode);
		}

		Long nationalityId = (Long)attributes.get("nationalityId");

		if (nationalityId != null) {
			setNationalityId(nationalityId);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}
	}

	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_organizationId = organizationId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getOrganizationName() {
		if (_organizationName == null) {
			return StringPool.BLANK;
		}
		else {
			return _organizationName;
		}
	}

	@Override
	public void setOrganizationName(String organizationName) {
		_organizationName = organizationName;
	}

	@Override
	public String getTaxId() {
		if (_taxId == null) {
			return StringPool.BLANK;
		}
		else {
			return _taxId;
		}
	}

	@Override
	public void setTaxId(String taxId) {
		_taxId = taxId;
	}

	@Override
	public long getNumberOfEmployees() {
		return _numberOfEmployees;
	}

	@Override
	public void setNumberOfEmployees(long numberOfEmployees) {
		_numberOfEmployees = numberOfEmployees;
	}

	@Override
	public String getRegistrationNumber() {
		if (_registrationNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _registrationNumber;
		}
	}

	@Override
	public void setRegistrationNumber(String registrationNumber) {
		_registrationNumber = registrationNumber;
	}

	@Override
	public String getPhone() {
		if (_phone == null) {
			return StringPool.BLANK;
		}
		else {
			return _phone;
		}
	}

	@Override
	public void setPhone(String phone) {
		_phone = phone;
	}

	@Override
	public String getFax() {
		if (_fax == null) {
			return StringPool.BLANK;
		}
		else {
			return _fax;
		}
	}

	@Override
	public void setFax(String fax) {
		_fax = fax;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@Override
	public String getAddressStreet1() {
		if (_addressStreet1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _addressStreet1;
		}
	}

	@Override
	public void setAddressStreet1(String addressStreet1) {
		_addressStreet1 = addressStreet1;
	}

	@Override
	public String getAddressStreet2() {
		if (_addressStreet2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _addressStreet2;
		}
	}

	@Override
	public void setAddressStreet2(String addressStreet2) {
		_addressStreet2 = addressStreet2;
	}

	@Override
	public String getCity() {
		if (_city == null) {
			return StringPool.BLANK;
		}
		else {
			return _city;
		}
	}

	@Override
	public void setCity(String city) {
		_city = city;
	}

	@Override
	public String getState() {
		if (_state == null) {
			return StringPool.BLANK;
		}
		else {
			return _state;
		}
	}

	@Override
	public void setState(String state) {
		_state = state;
	}

	@Override
	public String getPostalCode() {
		if (_postalCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _postalCode;
		}
	}

	@Override
	public void setPostalCode(String postalCode) {
		_postalCode = postalCode;
	}

	@Override
	public long getNationalityId() {
		return _nationalityId;
	}

	@Override
	public void setNationalityId(long nationalityId) {
		_nationalityId = nationalityId;
	}

	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Organization.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Organization toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Organization)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OrganizationImpl organizationImpl = new OrganizationImpl();

		organizationImpl.setOrganizationId(getOrganizationId());
		organizationImpl.setGroupId(getGroupId());
		organizationImpl.setCompanyId(getCompanyId());
		organizationImpl.setUserId(getUserId());
		organizationImpl.setCreateDate(getCreateDate());
		organizationImpl.setModifiedDate(getModifiedDate());
		organizationImpl.setOrganizationName(getOrganizationName());
		organizationImpl.setTaxId(getTaxId());
		organizationImpl.setNumberOfEmployees(getNumberOfEmployees());
		organizationImpl.setRegistrationNumber(getRegistrationNumber());
		organizationImpl.setPhone(getPhone());
		organizationImpl.setFax(getFax());
		organizationImpl.setEmail(getEmail());
		organizationImpl.setAddressStreet1(getAddressStreet1());
		organizationImpl.setAddressStreet2(getAddressStreet2());
		organizationImpl.setCity(getCity());
		organizationImpl.setState(getState());
		organizationImpl.setPostalCode(getPostalCode());
		organizationImpl.setNationalityId(getNationalityId());
		organizationImpl.setNote(getNote());

		organizationImpl.resetOriginalValues();

		return organizationImpl;
	}

	@Override
	public int compareTo(Organization organization) {
		long primaryKey = organization.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Organization)) {
			return false;
		}

		Organization organization = (Organization)obj;

		long primaryKey = organization.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Organization> toCacheModel() {
		OrganizationCacheModel organizationCacheModel = new OrganizationCacheModel();

		organizationCacheModel.organizationId = getOrganizationId();

		organizationCacheModel.groupId = getGroupId();

		organizationCacheModel.companyId = getCompanyId();

		organizationCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			organizationCacheModel.createDate = createDate.getTime();
		}
		else {
			organizationCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			organizationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			organizationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		organizationCacheModel.organizationName = getOrganizationName();

		String organizationName = organizationCacheModel.organizationName;

		if ((organizationName != null) && (organizationName.length() == 0)) {
			organizationCacheModel.organizationName = null;
		}

		organizationCacheModel.taxId = getTaxId();

		String taxId = organizationCacheModel.taxId;

		if ((taxId != null) && (taxId.length() == 0)) {
			organizationCacheModel.taxId = null;
		}

		organizationCacheModel.numberOfEmployees = getNumberOfEmployees();

		organizationCacheModel.registrationNumber = getRegistrationNumber();

		String registrationNumber = organizationCacheModel.registrationNumber;

		if ((registrationNumber != null) && (registrationNumber.length() == 0)) {
			organizationCacheModel.registrationNumber = null;
		}

		organizationCacheModel.phone = getPhone();

		String phone = organizationCacheModel.phone;

		if ((phone != null) && (phone.length() == 0)) {
			organizationCacheModel.phone = null;
		}

		organizationCacheModel.fax = getFax();

		String fax = organizationCacheModel.fax;

		if ((fax != null) && (fax.length() == 0)) {
			organizationCacheModel.fax = null;
		}

		organizationCacheModel.email = getEmail();

		String email = organizationCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			organizationCacheModel.email = null;
		}

		organizationCacheModel.addressStreet1 = getAddressStreet1();

		String addressStreet1 = organizationCacheModel.addressStreet1;

		if ((addressStreet1 != null) && (addressStreet1.length() == 0)) {
			organizationCacheModel.addressStreet1 = null;
		}

		organizationCacheModel.addressStreet2 = getAddressStreet2();

		String addressStreet2 = organizationCacheModel.addressStreet2;

		if ((addressStreet2 != null) && (addressStreet2.length() == 0)) {
			organizationCacheModel.addressStreet2 = null;
		}

		organizationCacheModel.city = getCity();

		String city = organizationCacheModel.city;

		if ((city != null) && (city.length() == 0)) {
			organizationCacheModel.city = null;
		}

		organizationCacheModel.state = getState();

		String state = organizationCacheModel.state;

		if ((state != null) && (state.length() == 0)) {
			organizationCacheModel.state = null;
		}

		organizationCacheModel.postalCode = getPostalCode();

		String postalCode = organizationCacheModel.postalCode;

		if ((postalCode != null) && (postalCode.length() == 0)) {
			organizationCacheModel.postalCode = null;
		}

		organizationCacheModel.nationalityId = getNationalityId();

		organizationCacheModel.note = getNote();

		String note = organizationCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			organizationCacheModel.note = null;
		}

		return organizationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(41);

		sb.append("{organizationId=");
		sb.append(getOrganizationId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", organizationName=");
		sb.append(getOrganizationName());
		sb.append(", taxId=");
		sb.append(getTaxId());
		sb.append(", numberOfEmployees=");
		sb.append(getNumberOfEmployees());
		sb.append(", registrationNumber=");
		sb.append(getRegistrationNumber());
		sb.append(", phone=");
		sb.append(getPhone());
		sb.append(", fax=");
		sb.append(getFax());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", addressStreet1=");
		sb.append(getAddressStreet1());
		sb.append(", addressStreet2=");
		sb.append(getAddressStreet2());
		sb.append(", city=");
		sb.append(getCity());
		sb.append(", state=");
		sb.append(getState());
		sb.append(", postalCode=");
		sb.append(getPostalCode());
		sb.append(", nationalityId=");
		sb.append(getNationalityId());
		sb.append(", note=");
		sb.append(getNote());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(64);

		sb.append("<model><model-name>");
		sb.append("com.rknowsys.eapp.hrm.model.Organization");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationName</column-name><column-value><![CDATA[");
		sb.append(getOrganizationName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>taxId</column-name><column-value><![CDATA[");
		sb.append(getTaxId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numberOfEmployees</column-name><column-value><![CDATA[");
		sb.append(getNumberOfEmployees());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>registrationNumber</column-name><column-value><![CDATA[");
		sb.append(getRegistrationNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phone</column-name><column-value><![CDATA[");
		sb.append(getPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fax</column-name><column-value><![CDATA[");
		sb.append(getFax());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addressStreet1</column-name><column-value><![CDATA[");
		sb.append(getAddressStreet1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addressStreet2</column-name><column-value><![CDATA[");
		sb.append(getAddressStreet2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>city</column-name><column-value><![CDATA[");
		sb.append(getCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>state</column-name><column-value><![CDATA[");
		sb.append(getState());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postalCode</column-name><column-value><![CDATA[");
		sb.append(getPostalCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nationalityId</column-name><column-value><![CDATA[");
		sb.append(getNationalityId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Organization.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Organization.class
		};
	private long _organizationId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private String _organizationName;
	private String _taxId;
	private long _numberOfEmployees;
	private String _registrationNumber;
	private String _phone;
	private String _fax;
	private String _email;
	private String _addressStreet1;
	private String _addressStreet2;
	private String _city;
	private String _state;
	private String _postalCode;
	private long _nationalityId;
	private String _note;
	private Organization _escapedModel;
}